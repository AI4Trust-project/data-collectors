metadata:
  name: youtubemeta
  labels:
    nuclio.io/project-name: default
  resourceVersion: "1018130"
spec:
  handler: "main:handler"
  runtime: "python:3.9"
  env:
    - name: KAFKA_BROKER
      valueFrom:
        secretKeyRef:
          name: kafkacredentials
          key: broker_url
    - name: MINIO_HOME
      valueFrom:
        secretKeyRef:
          name: miniocredentials
          key: miniohome
    - name: MINIO_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: miniocredentials
          key: accesskey
    - name: MINIO_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: miniocredentials
          key: secretkey
    - name: YOUTUBE_API_KEY
      valueFrom:
        secretKeyRef:
          name: youtubecredentials
          key: apikey
  resources:
    requests:
      cpu: 25m
      memory: 1Mi
  imageHash: "1699001953880654142"
  triggers:
    default-http:
      class: ""
      kind: http
      name: default-http
      maxWorkers: 1
      attributes:
        serviceType: ClusterIP
    kafka-trigger:
      class: ""
      kind: kafka-cluster
      name: kafka-trigger
      maxWorkers: 1
      explicitAckMode: disable
      workerTerminationTimeout: 5s
      attributes:
        brokers:
          - 'my-cluster-kafka-brokers.kafka:9092'
        consumerGroup: group1
        fetchDefault: 1048576
        heartbeatInterval: 3s
        initialOffset: latest
        maxWaitHandlerDuringRebalance: 5s
        rebalanceTimeout: 60s
        sasl:
          enable: false
          password: ""
          user: ""
        sessionTimeout: 10s
        topics:
          - youtube
        workerAllocationMode: pool
  version: 1
  alias: latest
  build:
    functionSourceCode: aW1wb3J0IGpzb24NCmltcG9ydCBvcw0KDQpmcm9tIG1pbmlvIGltcG9ydCBNaW5pbw0KZnJvbSBrYWZrYSBpbXBvcnQgS2Fma2FQcm9kdWNlcg0KZnJvbSBnb29nbGVhcGljbGllbnQuZGlzY292ZXJ5IGltcG9ydCBidWlsZA0KDQoNCmRlZiBpbml0X2NvbnRleHQoY29udGV4dCk6DQogICAgY2xpZW50ID0gTWluaW8oDQogICAgICAgIG9zLmVudmlyb24uZ2V0KCJNSU5JT19IT01FIiksDQogICAgICAgIGFjY2Vzc19rZXk9b3MuZW52aXJvbi5nZXQoIk1JTklPX0FDQ0VTU19LRVkiKSwNCiAgICAgICAgc2VjcmV0X2tleT1vcy5lbnZpcm9uLmdldCgiTUlOSU9fU0VDUkVUX0tFWSIpLA0KICAgICAgICBzZWN1cmU9RmFsc2UsDQogICAgKQ0KDQogICAgcHJvZHVjZXIgPSBLYWZrYVByb2R1Y2VyKA0KICAgICAgICBib290c3RyYXBfc2VydmVycz1bb3MuZW52aXJvbi5nZXQoIktBRktBX0JST0tFUiIpXSwNCiAgICAgICAgdmFsdWVfc2VyaWFsaXplcj1sYW1iZGEgeDoganNvbi5kdW1wcyh4KS5lbmNvZGUoInV0Zi04IiksDQogICAgKQ0KDQogICAgYXBpX2tleSA9IG9zLmVudmlyb24uZ2V0KCJZT1VUVUJFX0FQSV9LRVkiKQ0KICAgIHlvdXR1YmUgPSBidWlsZCgieW91dHViZSIsICJ2MyIsIGRldmVsb3BlcktleT1hcGlfa2V5KQ0KDQogICAgc2V0YXR0cihjb250ZXh0LCAicHJvZHVjZXIiLCBwcm9kdWNlcikNCiAgICBzZXRhdHRyKGNvbnRleHQsICJjbGllbnQiLCBjbGllbnQpDQogICAgc2V0YXR0cihjb250ZXh0LCAieW91dHViZSIsIHlvdXR1YmUpDQoNCg0KZGVmIGdlbmVyYXRlX2ZvbGRlcih2aWRlb19pZCwga2V5d29yZCk6DQogICAgZm9sZGVyX25hbWUgPSBbInZpZGVvcyIsIGtleXdvcmRdDQogICAgIyBjb3VudCAyIGNhcmFjdGVycyB0byBjcmVhdGUgc3ViZm9sZGVyDQogICAgZm9yIGkgaW4gcmFuZ2UoMCwgbGVuKHZpZGVvX2lkKSwgMik6DQogICAgICAgICMgQ2hlY2sgaWYgdGhlIHJlbWFpbmluZyBjaGFyYWN0ZXJzIGFyZSBsZXNzIHRoYW4gMg0KICAgICAgICBpZiBpICsgMSA9PSBsZW4odmlkZW9faWQpOg0KICAgICAgICAgICAgIyBSZWFkIG9ubHkgdGhlIGxhc3QgY2hhcmFjdGVyDQogICAgICAgICAgICBjaGFyID0gdmlkZW9faWRbaV0NCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgICMgUmVhZCAyIGNoYXJhY3RlcnMgYXQgYSB0aW1lDQogICAgICAgICAgICBjaGFyID0gdmlkZW9faWRbaSA6IGkgKyAyXQ0KDQogICAgICAgIGZvbGRlcl9uYW1lLmFwcGVuZChjaGFyKQ0KDQogICAgcmV0dXJuICIvIi5qb2luKGZvbGRlcl9uYW1lKQ0KDQoNCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToNCg0KICAgIGRhdGEgPSBqc29uLmxvYWRzKGV2ZW50LmJvZHkuZGVjb2RlKCJ1dGYtOCIpKQ0KICAgIHZpZGVvX2lkID0gZGF0YVsidmlkZW9faWQiXQ0KICAgIGtleXdvcmQgPSBkYXRhWyJrZXl3b3JkIl0NCg0KICAgIHRyeToNCiAgICAgICAgdmlkZW9zX3Jlc3BvbnNlID0gKA0KICAgICAgICAgICAgY29udGV4dC55b3V0dWJlLnZpZGVvcygpDQogICAgICAgICAgICAubGlzdCgNCiAgICAgICAgICAgICAgICBwYXJ0PVsNCiAgICAgICAgICAgICAgICAgICAgImNvbnRlbnREZXRhaWxzIiwNCiAgICAgICAgICAgICAgICAgICAgImlkIiwNCiAgICAgICAgICAgICAgICAgICAgImxpdmVTdHJlYW1pbmdEZXRhaWxzIiwNCiAgICAgICAgICAgICAgICAgICAgImxvY2FsaXphdGlvbnMiLA0KICAgICAgICAgICAgICAgICAgICAicGxheWVyIiwNCiAgICAgICAgICAgICAgICAgICAgInJlY29yZGluZ0RldGFpbHMiLA0KICAgICAgICAgICAgICAgICAgICAic25pcHBldCIsDQogICAgICAgICAgICAgICAgICAgICJzdGF0aXN0aWNzIiwNCiAgICAgICAgICAgICAgICAgICAgInN0YXR1cyIsDQogICAgICAgICAgICAgICAgICAgICJ0b3BpY0RldGFpbHMiLA0KICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgaWQ9dmlkZW9faWQsDQogICAgICAgICAgICApDQogICAgICAgICAgICAuZXhlY3V0ZSgpDQogICAgICAgICkNCg0KICAgICAgICB3aXRoIG9wZW4oInt9Lmpzb24iLmZvcm1hdCgibWV0YSIpLCAidyIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6DQogICAgICAgICAgICBqc29uLmR1bXAodmlkZW9zX3Jlc3BvbnNlLCBmLCBlbnN1cmVfYXNjaWk9RmFsc2UsIGluZGVudD00KQ0KDQogICAgICAgICMgVXBsb2FkIHRoZSBKU09OIGZpbGUgdG8gTWluaW8gaW4gYSBzdHJlYW1pbmcgZmFzaGlvbi4NCiAgICAgICAgb2JqZWN0X25hbWUgPSAie30ve30iLmZvcm1hdChnZW5lcmF0ZV9mb2xkZXIodmlkZW9faWQsIGtleXdvcmQpLCAibWV0YS5qc29uIikNCiAgICAgICAgY29udGV4dC5jbGllbnQuZnB1dF9vYmplY3QoDQogICAgICAgICAgICAidmlkZW9zIiwgb2JqZWN0X25hbWUsICJtZXRhLmpzb24iLCBjb250ZW50X3R5cGU9ImFwcGxpY2F0aW9uL2pzb24iDQogICAgICAgICkNCg0KICAgICAgICBvcy5yZW1vdmUoIm1ldGEuanNvbiIpDQogICAgICAgIA0KDQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICBwcmludChlKQ==
    commands:
      - 'pip install kafka-python minio google-api-python-client'
    runtimeAttributes:
      repositories: []
    codeEntryType: sourceCode
    timestamp: 1699001998
  loggerSinks:
    - level: debug
  platform: {}
  securityContext: {}
  eventTimeout: ""